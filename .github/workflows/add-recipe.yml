name: Add new recipe

on:
  workflow_dispatch:
    inputs:
      title:
        description: "Titel på receptet"
        required: true
        type: string
      category:
        description: "Kategori (t.ex. Husman, Pasta, Fisk, osv)"
        required: true
        type: string
      tags:
        description: "Taggar (komma-separerade, t.ex. snabbt,kött)"
        required: false
        type: string
      image:
        description: "Bildsökväg (t.ex. assets/bilder/minratt.png)"
        required: false
        type: string
      ingredients:
        description: "Ingredienser (kommaseparerade)"
        required: true
        type: string
      instructions:
        description: "Instruktioner (kommaseparerade)"
        required: true
        type: string
      tips:
        description: "Tips (valfritt)"
        required: false
        type: string

permissions:
  contents: write

jobs:
  add_recipe:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Add recipe to JSON
        env:
          FILE: data/recipes.json                       # ändra om filen ligger någon annanstans
          TITLE: ${{ inputs.title }}
          CATEGORY: ${{ inputs.category }}
          TAGS: ${{ inputs.tags }}
          IMAGE: ${{ inputs.image }}
          INGREDIENTS: ${{ inputs.ingredients }}
          INSTRUCTIONS: ${{ inputs.instructions }}
          TIPS: ${{ inputs.tips }}
        run: |
          # Skapa fil om den saknas
          [ -f "$FILE" ] || echo "[]" > "$FILE"

          # Generera id (kebab-case, transliterera specialtecken)
          ID=$(
            echo "$TITLE" \
            | iconv -f utf8 -t ascii//TRANSLIT 2>/dev/null \
            | tr '[:upper:]' '[:lower:]' \
            | sed -E 's/[^a-z0-9]+/-/g; s/^-+|-+$//g'
          )
          export ID

          # Använd CommonJS (require) för att slippa --input-type=module
          node - <<'NODE'
          const fs = require('fs');

          const path = process.env.FILE || 'recipes.json';
          const toArr = (v) => (v && v.trim() !== '' ? v.split(',').map(s => s.trim()).filter(Boolean) : []);

          // Läs/parsea befintlig JSON-array
          let data = [];
          if (fs.existsSync(path)) {
            const raw = fs.readFileSync(path, 'utf8').trim();
            if (raw) {
              try {
                const parsed = JSON.parse(raw);
                if (Array.isArray(parsed)) data = parsed;
              } catch (e) {
                throw new Error(`Kunde inte parsa ${path}: ${e.message}`);
              }
            }
          }

          const item = {
            id: process.env.ID,
            title: process.env.TITLE,
            category: process.env.CATEGORY,
            tags: toArr(process.env.TAGS),
            image: process.env.IMAGE || "",
            ingredients: toArr(process.env.INGREDIENTS),
            instructions: toArr(process.env.INSTRUCTIONS),
            tips: process.env.TIPS || ""
          };

          // Validering
          if (!item.title) throw new Error("Titel saknas.");
          if (!item.category) throw new Error("Kategori saknas.");
          if (item.ingredients.length === 0) throw new Error("Minst en ingrediens krävs.");

          // Dublettkontroll på id
          if (data.some(r => r.id === item.id)) {
            throw new Error(`ID '${item.id}' finns redan i ${path}.`);
          }

          data.push(item);
          fs.writeFileSync(path, JSON.stringify(data, null, 2) + '\n', 'utf8');
          console.log(`Added: ${item.title} (id=${item.id})`);
          NODE


      - name: Commit and push changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Add recipe: ${{ inputs.title }}"
